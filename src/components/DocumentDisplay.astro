---
import { marked } from 'marked';
import DocumentModal from './DocumentModal.astro';

interface Props {
  material: {
    name: string;
    content?: string;
    format?: 'markdown' | 'html';
    showContent?: 'modal' | 'details' | 'inline';
  };
  classId: string;
}

const { material, classId } = Astro.props;
const documentId = `doc-${classId}-${material.name.replace(/\s+/g, '-').toLowerCase()}`;
const content = material.content || '';
const format = material.format || 'markdown';
const processedContent = format === 'markdown' ? marked(content) : content;
const showContent = material.showContent || 'modal';
---

{showContent === 'modal' && (
  <>
    <button
      onclick={`openModal('${documentId}')`}
      data-document-id={documentId}
      class="document-modal-btn inline-flex items-center justify-center px-3 sm:px-4 py-2 border border-transparent text-xs sm:text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 transition-colors w-full sm:w-auto"
    >
      <span class="mr-1 sm:mr-2">ðŸ“„</span>
      Ver Documento
    </button>
    <DocumentModal
      id={documentId}
      title={material.name}
      content={content}
      format={format}
    />
  </>
)}

{showContent === 'details' && (
  <details class="mt-4 bg-gray-50 rounded-lg border border-gray-200">
    <summary class="cursor-pointer p-4 font-medium text-gray-900 hover:bg-gray-100 transition-colors flex items-center">
      <span class="mr-2">ðŸ“„</span>
      {material.name}
      <svg class="w-5 h-5 ml-auto transform transition-transform" fill="none" stroke="currentColor" viewBox="0 0 24 24">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
      </svg>
    </summary>
    <div class="p-4 border-t border-gray-200">
      <div class="prose prose-sm max-w-none">
        <div set:html={processedContent} />
      </div>
    </div>
  </details>
)}

{showContent === 'inline' && (
  <div class="mt-4 bg-white rounded-lg border border-gray-200 p-4">
    <h3 class="text-lg font-semibold text-gray-900 mb-3 flex items-center">
      <span class="mr-2">ðŸ“„</span>
      {material.name}
    </h3>
    <div class="prose prose-sm max-w-none">
      <div set:html={processedContent} />
    </div>
  </div>
)}

<style>
  /* Estilos para el contenido del documento */
  .prose h1 {
    @apply text-2xl font-bold text-gray-900 mb-4 mt-6;
  }
  .prose h2 {
    @apply text-xl font-bold text-gray-900 mb-3 mt-5;
  }
  .prose h3 {
    @apply text-lg font-semibold text-gray-900 mb-2 mt-4;
  }
  .prose h4 {
    @apply text-base font-semibold text-gray-900 mb-2 mt-3;
  }
  .prose p {
    @apply text-gray-700 mb-3 leading-relaxed;
  }
  .prose ul {
    @apply list-disc list-inside mb-3 text-gray-700;
  }
  .prose ol {
    @apply list-decimal list-inside mb-3 text-gray-700;
  }
  .prose li {
    @apply mb-1;
  }
  .prose blockquote {
    @apply border-l-4 border-blue-500 pl-4 italic text-gray-600 mb-3;
  }
  .prose code {
    @apply bg-gray-100 px-1 py-0.5 rounded text-sm font-mono;
  }
  .prose pre {
    @apply bg-gray-100 p-3 rounded mb-3 overflow-x-auto;
  }
  .prose strong {
    @apply font-semibold;
  }
  .prose em {
    @apply italic;
  }
  .prose a {
    @apply text-blue-600 hover:text-blue-800 underline;
  }
  .prose table {
    @apply w-full border-collapse border border-gray-300 mb-3;
  }
  .prose th {
    @apply border border-gray-300 px-3 py-2 bg-gray-100 font-semibold;
  }
  .prose td {
    @apply border border-gray-300 px-3 py-2;
  }
</style> 
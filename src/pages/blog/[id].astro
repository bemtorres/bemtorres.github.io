---
import Layout from '../../layouts/Layout.astro';
import { getPostById, getCategoryById, getPostsByCategory } from '../../lib/blogs';
import { marked } from 'marked';

export async function getStaticPaths() {
  const { getPublishedPosts } = await import('../../lib/blogs');
  const posts = getPublishedPosts();
  
  return posts.map(post => ({
    params: { id: post.id },
    props: { post }
  }));
}git a

const { post } = Astro.props;

if (!post) {
  return Astro.redirect('/404');
}

// Obtener posts relacionados de la misma categor√≠a
const relatedPosts = getPostsByCategory(post.categories[0]).filter(p => p.id !== post.id).slice(0, 3);
---

<Layout 
  title={post.seo?.metaTitle || post.title} 
  description={post.seo?.metaDescription || post.description}
>
  <article class="max-w-4xl mx-auto">
    <!-- Breadcrumb -->
    <nav class="mb-8">
      <ol class="flex items-center space-x-2 text-sm text-gray-500">
        <li><a href="/" class="hover:text-gray-700">Home</a></li>
        <li>‚Ä∫</li>
        <li><a href="/blog" class="hover:text-gray-700">Blog</a></li>
        <li>‚Ä∫</li>
        <li class="text-gray-900">{post.title}</li>
      </ol>
    </nav>

    <!-- Header del post -->
    <header class="mb-8">
      <!-- Categor√≠as -->
      <div class="flex flex-wrap gap-2 mb-4">
        {post.categories.map(categoryId => {
          const category = getCategoryById(categoryId);
          return category ? (
            <a 
              href={`/blog/categoria/${category.id}`}
              class={`px-3 py-1 ${category.color} text-white text-sm rounded-full hover:opacity-80 transition-opacity`}
            >
              {category.icon} {category.name}
            </a>
          ) : null;
        })}
      </div>

      <!-- T√≠tulo -->
      <h1 class="text-4xl font-bold text-gray-900 mb-4">{post.title}</h1>

      <!-- Meta informaci√≥n -->
      <div class="flex flex-wrap items-center gap-6 text-gray-600 mb-6">
        <div class="flex items-center">
          <span class="mr-2">üë§</span>
          <span>{post.author}</span>
        </div>
        <div class="flex items-center">
          <span class="mr-2">üìÖ</span>
          <span>{new Date(post.publishDate).toLocaleDateString('es-ES', { 
            year: 'numeric', 
            month: 'long', 
            day: 'numeric' 
          })}</span>
        </div>
        <div class="flex items-center">
          <span class="mr-2">‚è±Ô∏è</span>
          <span>{post.readingTime} min de lectura</span>
        </div>
        {post.lastModified !== post.publishDate && (
          <div class="flex items-center">
            <span class="mr-2">üîÑ</span>
            <span>Actualizado: {new Date(post.lastModified).toLocaleDateString('es-ES')}</span>
          </div>
        )}
      </div>

      <!-- Imagen destacada -->
      {post.featuredImage && (
        <img 
          src={post.featuredImage} 
          alt={post.title}
          class="w-full h-64 md:h-96 object-cover rounded-lg mb-8"
        />
      )}

      <!-- Descripci√≥n -->
      <p class="text-xl text-gray-600 leading-relaxed mb-8">{post.description}</p>
    </header>

    <!-- Contenido del post -->
    <div class="prose prose-lg max-w-none mb-12">
      {post.format === 'markdown' ? (
        <div set:html={marked(post.content)} />
      ) : (
        <div set:html={post.content} />
      )}
    </div>

    <!-- Tags -->
    {post.tags.length > 0 && (
      <div class="border-t pt-8 mb-12">
        <h3 class="text-lg font-semibold text-gray-900 mb-4">Tags</h3>
        <div class="flex flex-wrap gap-2">
          {post.tags.map(tag => (
            <a 
              href={`/blog/tag/${tag}`}
              class="px-3 py-1 bg-gray-100 text-gray-700 text-sm rounded-full hover:bg-gray-200 transition-colors"
            >
              #{tag}
            </a>
          ))}
        </div>
      </div>
    )}

    <!-- Posts relacionados -->
    {relatedPosts.length > 0 && (
      <div class="border-t pt-8">
        <h3 class="text-2xl font-bold text-gray-900 mb-6">Art√≠culos relacionados</h3>
        <div class="grid gap-6 md:grid-cols-3">
          {relatedPosts.map(relatedPost => (
            <article class="bg-white rounded-lg shadow-md overflow-hidden hover:shadow-lg transition-shadow">
              {relatedPost.featuredImage && (
                <img 
                  src={relatedPost.featuredImage} 
                  alt={relatedPost.title}
                  class="w-full h-32 object-cover"
                />
              )}
              <div class="p-4">
                <h4 class="font-semibold text-gray-900 mb-2 hover:text-blue-600 transition-colors">
                  <a href={`/blog/${relatedPost.id}`}>{relatedPost.title}</a>
                </h4>
                <p class="text-sm text-gray-600 line-clamp-2">{relatedPost.excerpt}</p>
                <div class="flex items-center justify-between mt-3 text-xs text-gray-500">
                  <span>üìÖ {new Date(relatedPost.publishDate).toLocaleDateString('es-ES')}</span>
                  <span>‚è±Ô∏è {relatedPost.readingTime} min</span>
                </div>
              </div>
            </article>
          ))}
        </div>
      </div>
    )}
  </article>
</Layout>

<style>
  .line-clamp-2 {
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }

  /* Estilos para el contenido Markdown */
  .prose h1 {
    @apply text-3xl font-bold text-gray-900 mb-6 mt-8;
  }

  .prose h2 {
    @apply text-2xl font-bold text-gray-900 mb-4 mt-6;
  }

  .prose h3 {
    @apply text-xl font-semibold text-gray-900 mb-3 mt-5;
  }

  .prose p {
    @apply text-gray-700 leading-relaxed mb-4;
  }

  .prose ul {
    @apply list-disc list-inside mb-4 space-y-2;
  }

  .prose ol {
    @apply list-decimal list-inside mb-4 space-y-2;
  }

  .prose li {
    @apply text-gray-700;
  }

  .prose blockquote {
    @apply border-l-4 border-blue-500 pl-4 italic text-gray-600 my-6;
  }

  .prose code {
    @apply bg-gray-100 px-2 py-1 rounded text-sm font-mono;
  }

  .prose pre {
    @apply bg-gray-900 text-white p-4 rounded-lg overflow-x-auto mb-4;
  }

  .prose pre code {
    @apply bg-transparent p-0 text-white;
  }

  .prose a {
    @apply text-blue-600 hover:text-blue-800 underline;
  }

  .prose strong {
    @apply font-bold text-gray-900;
  }

  .prose em {
    @apply italic;
  }
</style> 